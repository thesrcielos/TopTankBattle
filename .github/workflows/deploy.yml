name: Deploy to Multiple EC2 Instances

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build binary
        run: |
          go mod tidy
          cd cmd
          GOOS=linux GOARCH=amd64 go build -o ../app

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: ./app

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - host: ${{ secrets.EC2_HOST_1 }}
          - host: ${{ secrets.EC2_HOST_2 }}

    steps:
      - name: Download built binary
        uses: actions/download-artifact@v4
        with:
          name: app
          path: .

      - name: Copy app to EC2 ${{ matrix.host }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ matrix.host }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "app"
          target: "~/app"

      - name: Run app on EC2 ${{ matrix.host }}
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ matrix.host }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            pkill app || true
            mkdir -p ~/app
            mv ~/app/app ~/app/app_latest
            cd ~/app
            nohup ./app_latest > output.log 2>&1 &
