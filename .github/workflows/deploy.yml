name: Deploy to Multiple EC2 Instances

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build binary (linux/amd64)
        run: |
          go mod tidy
          cd cmd
          GOOS=linux GOARCH=amd64 go build -o ../app

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: |
            ./app
            ./map.json
        

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instance: [ec2-1, ec2-2]  # Nombres simbÃ³licos

    steps:
      - name: Download built binary
        uses: actions/download-artifact@v4
        with:
          name: app
          path: .

      - name: Set EC2 host from matrix
        id: set-host
        run: |
          if [ "${{ matrix.instance }}" = "ec2-1" ]; then
            echo "host=${{ secrets.EC2_HOST_1 }}" >> $GITHUB_OUTPUT
          else
            echo "host=${{ secrets.EC2_HOST_2 }}" >> $GITHUB_OUTPUT
          fi

      - name: Verifica archivos antes del scp
        run: ls -lh .

      - name: Copy binary to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ steps.set-host.outputs.host }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "app"
          target: "~/app"

      - name: Run app on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ steps.set-host.outputs.host }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            pkill app || true
            mkdir -p ~/app
            mv ~/app/app ~/app/app_latest
            chmod +x ~/app/app_latest 
            cd ~/app
            nohup ./app_latest > output.log 2>&1 &
